# === controllers.py ===
from database import get_homework, get_demo

from telebot import types
from models import get_subjects

def handle_homework(bot, message):
    try:
        subjects = get_subjects()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for subject in subjects:
            keyboard.add(types.KeyboardButton(subject))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –î/–ó:", reply_markup=keyboard)
        bot.register_next_step_handler(message, process_homework_subject, bot)
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def process_homework_subject(message, bot):
    try:
        subject = message.text.strip()
        if subject not in get_subjects():
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=main_menu())
            return
        tasks = get_homework(subject)
        reply = f"üìö –î/–ó –ø–æ {subject}:\n" + ("\n".join([t[0] for t in tasks]) if tasks else "–ó–∞–¥–∞–Ω–∏–π –Ω–µ—Ç! –í—ã –º–æ–ª–æ–¥—Ü—ã! üéâ")
        bot.send_message(message.chat.id, reply, reply_markup=main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def handle_demo(bot, message):
    try:
        subjects = get_subjects()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for subject in subjects:
            keyboard.add(types.KeyboardButton(subject))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ–º–æ:", reply_markup=keyboard)
        bot.register_next_step_handler(message, process_demo_subject, bot)
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def process_demo_subject(bot, message):
    try:
        subject = message.text.strip()
        if subject not in get_subjects():
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=main_menu())
            return
        demos = get_demo(subject)
        reply = f"‚úç –î–µ–º–æ –ø–æ {subject}:\n" + ("\n".join([t[0] for t in demos]) if demos else "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–º–æ-–∑–∞–¥–∞–Ω–∏–π!")
        bot.send_message(message.chat.id, reply, reply_markup=main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def main_menu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('üìö –î/–ó üìö', 'üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üïí')
    keyboard.add('‚úç –î–µ–º–æ ‚úç', '‚ûï –î–æ–±–∞–≤–∏—Ç—å ‚ûï')
    return keyboard

def handle_schedule(bot, message):
    bot.send_message(message.chat.id, "–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.", reply_markup=main_menu())

# === controllers.py ===
from database import get_homework, get_demo

from telebot import types
from models import get_subjects, get_content_types

def handle_homework(bot, message):
    try:
        subjects = get_subjects()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for subject in subjects:
            keyboard.add(types.KeyboardButton(subject))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –î/–ó:", reply_markup=keyboard)
        bot.register_next_step_handler(message, process_homework_subject, bot)
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def process_homework_subject(message, bot):
    try:
        subject = message.text.strip()
        if subject not in get_subjects():
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=main_menu())
            return
        tasks = get_homework(subject)
        reply = f"üìö –î/–ó –ø–æ {subject}:\n" + ("\n".join([t[0] for t in tasks]) if tasks else "–ó–∞–¥–∞–Ω–∏–π –Ω–µ—Ç! –í—ã –º–æ–ª–æ–¥—Ü—ã! üéâ")
        bot.send_message(message.chat.id, reply, reply_markup=main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def handle_demo(bot, message):
    try:
        subjects = get_subjects()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for subject in subjects:
            keyboard.add(types.KeyboardButton(subject))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ–º–æ:", reply_markup=keyboard)
        bot.register_next_step_handler(message, process_demo_subject, bot)
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def process_demo_subject(message, bot):
    try:
        subject = message.text.strip()
        if subject not in get_subjects():
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=main_menu())
            return
        demos = get_demo(subject)
        reply = f"‚úç –î–µ–º–æ –ø–æ {subject}:\n" + ("\n".join([t[0] for t in demos]) if demos else "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–º–æ-–∑–∞–¥–∞–Ω–∏–π!")
        bot.send_message(message.chat.id, reply, reply_markup=main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def main_menu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('üìö –î/–ó üìö', 'üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üïí')
    keyboard.add('‚úç –î–µ–º–æ ‚úç', '‚ûï –î–æ–±–∞–≤–∏—Ç—å ‚ûï')
    return keyboard

def handle_schedule(bot, message):
    try:
        from models import get_days
        days = get_days()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for day in days:
            keyboard.add(types.KeyboardButton(day))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", reply_markup=keyboard)
        bot.register_next_step_handler(message, process_schedule_view, bot)
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def process_schedule_view(message, bot):
    try:
        day = message.text.strip()
        if day not in get_days():
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–µ–Ω—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=main_menu())
            return
        from database import get_schedule
        schedules = get_schedule(day)
        reply = f"üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day}:\n" + ("\n".join([s[0] for s in schedules]) if schedules else "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        bot.send_message(message.chat.id, reply, reply_markup=main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')

def handle_add(bot, message):
    try:
        content_types = get_content_types()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for content_type in content_types:
            keyboard.add(types.KeyboardButton(content_type))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:", reply_markup=keyboard)
        bot.register_next_step_handler(message, process_content_type, bot)
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')


def process_content_type(message, bot):
    try:
        content_type = message.text.strip()
        bot.send_message(message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {content_type}.  –î–∞–ª—å–Ω–µ–π—à–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ.")
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')
